package com.shen.crm.workbench.mapper;

import com.shen.crm.workbench.domain.ClueRemark;

import java.util.List;

public interface ClueRemarkMapper {
    /**
     * 更新线索备注
     *
     * @param clueRemark 更新的线索备注
     * @return 更新的条数
     */
    int updateClueRemark(ClueRemark clueRemark);

    /**
     * 添加线索备注
     *
     * @param clueRemark 线索备注
     * @return 添加的条数
     */
    int insertClueRemark(ClueRemark clueRemark);

    /**
     * 通过线索备注的id删除线索备注
     *
     * @param id 线索备注的id
     * @return 删除的条数
     */
    int deleteClueRemarkById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Mon Jan 09 11:24:56 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Mon Jan 09 11:24:56 CST 2023
     */
    int insert(ClueRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Mon Jan 09 11:24:56 CST 2023
     */
    int insertSelective(ClueRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Mon Jan 09 11:24:56 CST 2023
     */
    ClueRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Mon Jan 09 11:24:56 CST 2023
     */
    int updateByPrimaryKeySelective(ClueRemark record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbggenerated Mon Jan 09 11:24:56 CST 2023
     */
    int updateByPrimaryKey(ClueRemark record);

    List<ClueRemark> selectClueRemarkForDetailByClueId(String clueId);

    /**
     * 根据clueId查询该线索下所有的备注信息
     *
     * @param clueId
     * @return
     */
    List<ClueRemark> selectClueRemarkByClueId(String clueId);

    /**
     * 通过线索id删除备注（用于删除线索时同时删除该线索备注；因为可能一次性会删除多个线索，所以传入的id是线索id数组）
     *
     * @param clueIds 线索id
     * @return 删除的条数
     */
    int deleteClueRemarkByClueId(String[] clueIds);

}